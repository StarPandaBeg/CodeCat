{% extends "layouts/two-column.jinja" %}

{% from 'macros/block-base.jinja' import block, block_row, block_title %}
{% from 'macros/chip.jinja' import chip %}
{% from 'macros/wrapper.jinja' import wrap %}

{% block title %} {{ contest.name }} {% endblock %}

{% block column_a %}
{% call wrap('Задачи') %}
<table class="table contest-table">
  <thead>
    <tr>
      <th width="32px">#</th>
      <th>Задача</th>
      <th>Тэги</th>
      <th></th>
    </tr>
  </thead>
  <tbody>
    {% for problem in contest.problems %}
    {% set letter = problem.letter if problem.letter else "" %}

    <tr class="{{ problem.css_class }}">
      <td>
        <a href="{{ url_for('problem.view', id=problem.id) }}">{{ letter }}</a>
      </td>
      <td>
        <a href="{{ url_for('problem.view', id=problem.id) }}">{{ problem.name }}</a>
      </td>
      <td>
        {% for tag in problem.tags %}
        {{ chip(tag.tag) }}
        {% endfor %}
      </td>
      <td align="right">
        {% if problem.status_icon %}
        <span class="icon mdi mdi-24px {{ problem.status_icon }}" title="{{ problem.status_friendly }}"></span>
        {% endif %}
        {% if problem.solutions|length == 0 %}
        <span class="icon icon-no-code mdi mdi-24px mdi-xml" title="К задаче не добавлено решений"></span>
        {% endif %}
        <a href="javascript:void(0)" class="problem-delete" onclick="tryDeleteProblem({{problem.id}})">&#10006;</a>
      </td>
    </tr>
    {% endfor %}
  </tbody>
</table>
{% endcall %}
<div class="problem-new">
  <a href="{{ url_for('contest.create_problem', id=contest.id) }}">Добавить</a>
  {% if contest.problems | length > 0 %}
  <a href="javacript:void(0)" onclick="toggleEdit()">Редактировать</a>
  {% endif %}
</div>
{% endblock %}


{% block column_b %}
{% call block() %}

{{ block_title(contest.name, contest.link) }}

{% if contest.description %}
{% call block_row() %}
{{ contest.description | paragraphy }}
{% endcall %}
{% endif %}

{% call block_row() %}
<p><b>Завершен:</b> {{ contest.date.strftime('%d.%m.%Y') }}</p>
<p title="Решено / Ошибка / Не начато">
  <b>Статистика:</b>
  {{ contest.problem_stats|join("/") }}
</p>
<p>
  <b>Всего:</b>
  {{ contest.problem_stats[0] -}}
  /
  {{- contest.problems|length }}
</p>
{% endcall %}

{% call block_row() %}
<p>
  <a href="{{ url_for('contest.edit', id=contest.id) }}" class="contest-action">Редактировать</a>
</p>
<p>
  <a href="javascript:void(0)" onclick="tryDeleteContest()" class="contest-action">Удалить</a>
</p>
{% endcall %}

{% endcall %}
{% endblock %}

{% block style %}
{{ super() }}
<style>
  .contest-table tr th,
  .contest-table tr td {
    padding: 10px !important;
  }

  .contest-table tbody tr .icon::before {
    vertical-align: middle;
  }

  .contest-table tbody tr.solved {
    background: rgb(230, 255, 230);
  }

  .contest-table tbody tr.failed {
    background: rgb(255, 230, 230);
  }

  .contest-table tbody tr.solved .icon {
    color: rgb(100, 205, 100);
  }

  .contest-table tbody tr.failed .icon,
  .contest-table tbody tr .icon-no-code {
    color: rgb(255, 50, 50) !important;
  }

  .contest-action {
    color: darkblue;
  }

  .problem-new {
    padding-top: 5px;
    text-align: right;
    font-size: .8rem;
  }

  .problem-new a {
    color: darkblue;
    opacity: .75;
  }

  .problem-delete {
    padding: 5px;
    display: none;
    padding-right: 0;
    vertical-align: middle;
    font-size: .9rem;
    color: black !important;
    text-decoration: none;
  }

  .problem-delete-active {
    display: inline-block;
  }
</style>
{% endblock %}

{% block script %}
<script>
  function toggleEdit() {
    document.querySelectorAll(".problem-delete").forEach(item => item.classList.toggle("problem-delete-active"))
  }

  function tryDeleteProblem(id) {
    if (!confirm("Вы действительно хотите удалить задачу?")) return
    deleteProblem(id)
  }

  function deleteProblem(id) {
    const urlTemplate = "{{url_for('problem.delete', id='-1')}}"
    const url = urlTemplate.replace("-1", id)
    fetch(url, {
      method: "DELETE"
    }).then(() => location.reload())
  }

  function tryDeleteContest() {
    if (!confirm("Вы действительно хотите удалить соревнование?")) return
    const delete_problems = confirm("Удалить связанные задачи?")
    deleteContest(delete_problems)
  }

  function deleteContest(delete_problems) {
    const url = "{{url_for('contest.delete', id=contest.id)}}"
    const data = new FormData()
    data.append('delete_problems', delete_problems)
    fetch(url, {
      method: "DELETE",
      body: data
    }).then(() => location.href = "{{ url_for('contest.index') }}")
  }
</script>
{% endblock %}